package com.examportal.services.implement;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.examportal.exception.DataValidationException;
import com.examportal.exception.GenericResponse;
import com.examportal.model.exam.Quiz;
import com.examportal.model.exam.UserActiveQuizDTO;
import com.examportal.model.repo.QuizRepository;
import com.examportal.services.QuizService;

@Service
public class QuizServiceImpl implements QuizService {
	@Autowired
	private QuizRepository quizRepository;

	@Override
	public GenericResponse addQuiz(Quiz quiz) throws Exception {
		if (quiz.getQuestions() == null) {
			throw new DataValidationException("Please Fill the Questions");

		} else if (quiz.getCategory() == null) {
			throw new DataValidationException("Please Fill the Category");

		}
		quizRepository.save(quiz);
		return new GenericResponse(201, "Created Succesfully");

	}

	@Override
	public GenericResponse updateQuiz(Quiz quiz , Long quizId) {
		quiz.setId(quizId);
		quizRepository.save(quiz);
		return new GenericResponse(202, "Updated Succesfully");
	}

	@Override
	public Page<Quiz> getQuizzes(int page, int size) {
		Pageable pageable = PageRequest.of(page, size);
		Page<Quiz> quiz;

		quiz = quizRepository.findAll(pageable);

		return quiz;
	}

	@Override
	public Quiz getQuiz(Long quizId) {
		return this.quizRepository.findById(quizId).get();
	}

	@Override
	public List<UserActiveQuizDTO> getUserActiveQuizzes() {
        List<Quiz> activeQuizzes = quizRepository.findByIsActive(true);

        // Create a list of UserActiveQuizDTO objects
        List<UserActiveQuizDTO> userActiveQuizzes = new ArrayList<>();
        for (Quiz quiz : activeQuizzes) {
            UserActiveQuizDTO dto = new UserActiveQuizDTO();
            dto.setId(quiz.getId());
            dto.setTitle(quiz.getTitle());
            dto.setDescription(quiz.getDescription());
            userActiveQuizzes.add(dto);
        }

        return userActiveQuizzes;
    }
	
	


}
